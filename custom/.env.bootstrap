PLUGINS=auth_ldap,jenkins,env,pipelines,slack_app,slack_webhooks
DEFAULT_URL=http://localhost:3000
SECRET_TOKEN=ce2fd43898f36b1eb73750d901b9669e03461ebfcf18c32045d1860d1b59c32eaa0780baed33fc347df0a0fe04cb3c897ab8c91a1ba7d6efdffee561e6fe1f1d
RAILS_MIN_THREADS=5
RAILS_MAX_THREADS=10
RAILS_LOG_TO_STDOUT=1
# RAILS_ENV=production

# Required token to fetch commit diff / PR status / create tags etc
GITHUB_TOKEN=not_used

## Auth with LDAP (optional)
AUTH_LDAP=true
LDAP_TITLE="Samson LDAP"
LDAP_HOST="ds-pdc.plansource.local"
LDAP_PORT=389  # Jenkins is using 3268, I'm assuming because it is using TLS with this...
# LDAP_PORT=3268  # Jenkins is using 3268, I'm assuming because it is using TLS with this...
LDAP_BASE="DC=plansource,DC=local"
LDAP_UID="sAMAccountName"
LDAP_BINDDN="CN=samsonldap,OU=Service Accounts,OU=IT,DC=plansource,DC=local"
LDAP_PASSWORD="${LDAP_BIND_PASSWORD}"

## Auth with Gitlab (optional)
# AUTH_GITLAB=true
# GITLAB_APPLICATION_ID=
# GITLAB_SECRET=
GITLAB_URL=https://git.plansource.com # optional, replaces https://gitlab.com

## SMTP settings
# SMTP_URL='smtp://localhost'
# SMTP_USER=
# SMTP_PASSWORD=

## Periodical tasks (cron substitute, see lib/samson/periodical.rb)
# stop_expired_deploys:60
# remove_expired_locks:10
# renew_vault_token:86400
# report_system_stats:60
# periodical_deploy:86400
PERIODICAL=stop_expired_deploys:60,remove_expired_locks:60,report_system_stats:60,periodical_deploy:86400

## Docker
# DOCKER_FEATURE=1 # optional, docker support
# DOCKER_REGISTRIES=https://user:pass@my.registry/some-namespace # required, where to push/pull your docker images
# DOCKER_HOST= # e.g. tcp://my-docker-registry.example.com:2375
# DOCKER_KEEP_BUILT_IMGS # optional. Set to 1 to keep built images for cache. Fills the disk so some cleanup machanism is needed
# DOCKER_READ_TIMEOUT=600 # optional. How long to wait on docker reads.

## Slack
# SLACK_API_TOKEN= # optional. only required for the slack integration user mention autocomplete in the buddy approval request form (when BUDDY_CHECK_FEATURE=1). Buddy approval notification would still work without this
# SLACK_CLIENT_ID= # optional, see plugins/slack_app/README.md
# SLACK_CLIENT_SECRET= # optional, see plugins/slack_app/README.md
# SLACK_VERIFICATION_TOKEN= # optional, see plugins/slack_app/README.md
# SLACK_GLOBAL_BUDDY_REQUEST="<webhook_url>#<channel>" # send notifications for all buddy requests to this channel

## Request access UI on users profile page
REQUEST_ACCESS_FEATURE=1 # optional, enable request access link
REQUEST_ACCESS_EMAIL_ADDRESS_LIST="jgoerz@plansource.com jrutherford@plansource.com" # optional, space separated list of email addresses (managers mailing list, JIRA, etc.)
REQUEST_ACCESS_EMAIL_PREFIX="Samson Access Request" # optional, email subject prefix

ONLY_ADMINS_CAN_UNLOCK_STAGE=1 # optional, restricts (un)locking to admin users.

## Secret storage
# SECRET_STORAGE_BACKEND= # optional, should be one of: SecretStorage::DbBackend (default) or SecretStorage::HashicorpVault
# SECRET_STORAGE_SHARING_GRANTS=true # optional, instead of sharing global secrets by default, access has to be granted
# VAULT_PREFIX= # optional, what to prefix vault keys with if using SecretStorage::HashicorpVault

## Feature: Use LDAP_UID as user.external_id.
# The default is to use the Distinguished Name for users.external_id.  If your organization changes
# any part of the DNs for any reason, this could cause any configured users to loose their current
# configuration since it will be assumed to be a new user with a new external_id.  This feature
# forces the value of LDAP_UID (set above), which is used to query the user in the LDAP, which
# almost certainly is unique per user, to also be used for the external_id.  Note, this name must
# also exist in the "extra" raw info:
# https://github.com/omniauth/omniauth-ldap/blob/master/README.md
# https://github.com/omniauth/omniauth-ldap/blob/master/lib/omniauth/strategies/ldap.rb#L17
USE_LDAP_UID_AS_EXTERNAL_ID=1

# vim: set ft=sh :
